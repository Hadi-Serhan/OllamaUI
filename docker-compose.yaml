services:
  api:
    image: ${DOCKERHUB_USERNAME}/yolo:${YOLO_IMG_TAG:-latest}
    pull_policy: always

    environment:
      - DATABASE_URL=postgresql+psycopg://postgres:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - AWS_REGION=${AWS_REGION}         
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}   
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      - db
    restart: unless-stopped

  db:
    image: postgres:15
    pull_policy: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-predictions}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  ollama-ui:
    image: ${DOCKERHUB_USERNAME}/ollama:${OLLAMA_UI_IMG_TAG}
    pull_policy: always
    ports:
      - "${OLLAMA_UI_PORT:-3000}:3000"
    environment:
      YOLO_SERVICE: http://api:8080            # server-to-server call to YOLO
      OLLAMA_URL: ${OLLAMA_URL}               # your Ollama backend
      AWS_REGION: ${AWS_REGION}               
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}         
    depends_on:
      - api
    restart: unless-stopped

volumes:
  postgres_data:
